(function(a,b){typeof define=="function"&&define.amd?define(["marionette"],b):a.Backbone.Marionette.FormView=b(a.Backbone.Marionette)})(this,function(a){var b=a.ItemView.extend({className:"formView",defaults:{form:{},field:{validateOn:"submit"}},ui:{form:"form",submit:"input[type='submit']"},events:{"submit form":"beforeFormSubmit","blur input":"inputBlur","keyup input":"inputKeyUp"},fields:{},coreValidators:{},validators:{},initialize:function(a){this.options=_.defaults(a,this.defaults.form),this.model=this.options.model||null,this.options.template&&(this.template=this.options.template),this.options.onSubmit&&(this.onSubmit=this.options.onSubmit);var b=this.model&&!_.isEmpty(this.model.fields)||!_.isEmpty(this.options.fields);if(!b)throw new Error("Fields Must Be Provided");this.model||(this.data=this.options.data||{},this.createBaseModel())},createBaseModel:function(){var a=Backbone.Model.extend({});this.model=new a,this.model.fields=this.options.fields,this.model.validators=this.options.validators||{},this.data&&this.model.set(this.data)},attachFields:function(){for(var a in this.model.fields){var b=_.defaults(this.model.fields[a],this.defaults.field),c=this.model.get(a);this.setDataModelAttr(b.el,a),this.setDomModelField(a,b),c&&this.populateField(a,c)}},attachValidators:function(){var a=this.model.validators;a&&(this.validators=a)},setDataModelAttr:function(a,b){this.$(a).attr("data-model",b)},setDomModelField:function(a,b){this.fields[a]=b},populateField:function(a,b){this.$(this.fields[a].el).val(b)},serializeFormData:function(){var a=this,b={};return _.each(this.fields,function(c,d){var e=a.$(c.el);e&&(b[d]=e.val()||e.text()||"")}),b},beforeFormSubmit:function(a){a.preventDefault();var b=this.serializeFormData();_.isFunction(this.onSubmit)&&this.onSubmit.call(this,b),this.validate(function(a){if(a)return _.isFunction(this.onSubmitError)&&this.onSubmitError.call(this,a),!1;this.submit(b)})},inputBlur:function(a){var b=a.target||a.srcElement,c=$(b).attr("data-model"),d=this.$(b).val();this.fields[c]&&this.handleBlurValidation(c,b,d)},inputKeyUp:function(){},handleBlurValidation:function(a,b,c){this.fields[a].validateOn==="blur"&&(console.log("HAS BLUR VALIDATIONS"),console.log(b),console.log(c))},validate:function(a){var b=this,c=null,d=this.model.toJSON();_.each(d,function(a,c){console.log(a);var d=b.fields[c],e=d&&d.validations?d.validations:{};e&&_.each(e,function(d,e){b.validateField(c,a,e,d)})}),_.isFunction(a)&&a.call(this,c)},validateField:function(){return!0},submit:function(a){typeof this.onSubmit=="function"?this.onSubmit(a):console.log("onSubmit Must Be Defined")},onRender:function(){this.attachFields(),this.attachValidators()}});return b});